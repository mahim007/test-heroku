{"version":3,"sources":["actions/ProjectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/dashboard/Dashboard.js","utils/jwtUtils.js","actions/securityActions.js","components/layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","utils/BoardUtils.js","components/ProjectTask/AddProjectTask.js","components/ProjectTask/UpdateProjectTask.js","components/layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","utils/securedRoutes.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onClickDelete","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","security","validToken","user","userIsLoggedIn","fullName","userIsNotLoggedIn","headerLinks","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","e","setState","target","name","value","preventDefault","newProject","nextProps","classnames","placeholder","React","initialState","project_tasks","project_task","combineReducers","action","filter","backlog","item","projectSequence","middleware","thunk","reactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","projectTask","priority","summary","acceptanceCriteria","Backlog","todoTasks","task","status","inProgressTasks","doneTasks","ProjectBoard","getBacklog","boardContent","length","projectNotFound","role","boradAlgorithm","propTyes","PropTypes","object","isRequired","func","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","newLoginRequest","login","loginRequest","setItem","decodedToken","jwt_decode","component","otherProps","render","jwtToken","getItem","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.abbaa981.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data associated with it!!!\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//types for backlog actions\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/ProjectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onClickDelete = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onClickDelete.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"../project/ProjectItem\";\r\nimport CreateProjectButton from \"../project/CreateProjectButton\";\r\nimport { getProjects } from \"../../actions/ProjectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem\r\n                  key={project.projectIdentifier}\r\n                  project={project}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJwtToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorizaion\"];\r\n  }\r\n};\r\n\r\nexport default setJwtToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJwtToken from \"../utils/jwtUtils\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (loginRequest) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", loginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJwtToken(token);\r\n    const decodedToken = jwt_decode(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decodedToken,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJwtToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsLoggedIn = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/dashboard\" className=\"nav-link\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <div className=\"nav-link \">\r\n              <i className=\"fas fa-user-circle mr-1\" /> {user.fullName}\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/logout\"\r\n              className=\"nav-link\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotLoggedIn = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/register\" className=\"nav-link \">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/login\" className=\"nav-link\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const headerLinks = validToken && user ? userIsLoggedIn : userIsNotLoggedIn;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/ProjectActions\";\r\nimport classnames from \"classnames\";\r\nclass AddProject extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">\r\n                  Create / Edit Project form\r\n                </h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <p>{errors.description}</p>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <p>{errors.start_date}</p>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <p>{errors.end_date}</p>\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS: {\r\n      return action.payload;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS: {\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    }\r\n    case GET_PROJECT: {\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n    }\r\n    case DELETE_PROJECT: {\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG: {\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n    }\r\n    case GET_PROJECT_TASK: {\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n    }\r\n\r\n    case DELETE_PROJECT_TASK: {\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (item) => item.projectSequence !== action.payload\r\n        ),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER: {\r\n      return {\r\n        ...state,\r\n        validToken: action.payload ? true : false,\r\n        user: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\nconst reactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && reactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), reactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/ProjectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (nextProps.project !== this.props.project) {\r\n      const {\r\n        id,\r\n        projectName,\r\n        projectIdentifier,\r\n        description,\r\n        start_date,\r\n        end_date,\r\n      } = nextProps.project;\r\n\r\n      this.setState({\r\n        id,\r\n        projectName,\r\n        projectIdentifier,\r\n        description,\r\n        start_date,\r\n        end_date,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.start_date,\r\n                    })}\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.start_date && (\r\n                    <div className=\"invalid-feedback\">{errors.start_date}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.end_date,\r\n                    })}\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.end_date && (\r\n                    <div className=\"invalid-feedback\">{errors.end_date}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProjectTask } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectTask extends Component {\r\n  onClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { projectTask } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n    if (projectTask.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    } else if (projectTask.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    } else if (projectTask.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {projectTask.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {projectTask.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            onClick={this.onClick.bind(\r\n              this,\r\n              projectTask.projectIdentifier,\r\n              projectTask.projectSequence\r\n            )}\r\n            className=\"btn btn-danger ml-4\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  projectTask,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, projectTask);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"../ProjectTask/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props;\r\n    const todoTasks = project_tasks.map((task) => {\r\n      if (task.status === \"TO_DO\")\r\n        return <ProjectTask key={task.id} projectTask={task} />;\r\n    });\r\n    const inProgressTasks = project_tasks.map((task) => {\r\n      if (task.status === \"IN_PROGRESS\")\r\n        return <ProjectTask key={task.id} projectTask={task} />;\r\n    });\r\n    const doneTasks = project_tasks.map((task) => {\r\n      if (task.status === \"DONE\")\r\n        return <ProjectTask key={task.id} projectTask={task} />;\r\n    });\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoTasks}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressTasks}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneTasks}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport { boradAlgorithm } from \"../../utils/BoardUtils\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n    let boardContent = boradAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link\r\n          to={`/addProjectTask/${id}`}\r\n          href\r\n          className=\"btn btn-primary mb-3\"\r\n        >\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {boardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTyes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React from \"react\";\r\nimport Backlog from \"../components/ProjectBoard/Backlog\";\r\n\r\nexport const boradAlgorithm = (errors, project_tasks) => {\r\n  if (project_tasks.length < 1) {\r\n    if (errors && errors.projectNotFound) {\r\n      return (\r\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          {errors.projectNotFound}\r\n        </div>\r\n      );\r\n    } else if (errors && errors.projectIdentifier) {\r\n      return (\r\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          {errors.projectIdentifier}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n          No project task found on this board\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    return <Backlog project_tasks={project_tasks} />;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addProjectTask } from \"../../actions/backlogActions\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  addProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../actions/backlogActions\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      created_At: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.projectTask !== this.props.projectTask) {\r\n      const {\r\n        id,\r\n        projectSequence,\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        priority,\r\n        dueDate,\r\n        projectIdentifier,\r\n        created_At,\r\n      } = nextProps.projectTask;\r\n      this.setState({\r\n        id,\r\n        projectSequence,\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        priority,\r\n        dueDate,\r\n        projectIdentifier,\r\n        created_At,\r\n      });\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      created_At: this.state.created_At,\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updatedProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  projectTask: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapPropsToState = (state) => ({\r\n  projectTask: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapPropsToState, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to start you own project\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { createNewUser } from \"./../../actions/securityActions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"fullName\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  createNewUser: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newLoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(newLoginRequest);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst SecuredRoutes = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoutes.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToPorps = (state) => ({\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToPorps)(SecuredRoutes);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport Header from \"./components/layout/Header\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectTask/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectTask/UpdateProjectTask\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport setJwtToken from \"./utils/jwtUtils\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoutes from \"./utils/securedRoutes\";\r\n\r\nconst jwtToken = localStorage.getItem(\"jwtToken\");\r\nif (jwtToken) {\r\n  setJwtToken(jwtToken);\r\n  const decodedToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decodedToken,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (currentTime > decodedToken.exp) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Switch>\r\n            <SecuredRoutes exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecuredRoutes exact path=\"/addProject\" component={AddProject} />\r\n            <SecuredRoutes\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            />\r\n            <SecuredRoutes\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            />\r\n            <SecuredRoutes\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecuredRoutes\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n              component={UpdateProjectTask}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}